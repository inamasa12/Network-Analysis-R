plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=5)
plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=1,
rot=c(90, -18, 54, -54, 18))
plotHive(advHPD, ch=0, method="rank", bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=1,
rot=c(90, -18, 54, -54, 18))
plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=5)
library(igraph)
advice_igraph <- graph_from_adjacency_matrix(ADVICE)
V(advice_igraph)$tenure <- tenure
V(advice_igraph)$dpt <- paste("Dpt.", dpt)
library(ggraph)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
library(ggraph)
ligrary(purrr)
install.packages("purrr")
ligrary(purrr)
library(purrr)
library(ggraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph <- graph_from_adjacency_matrix(ADVICE)
V(advice_igraph)$tenure <- tenure
V(advice_igraph)$dpt <- paste("Dpt.", dpt)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
plot(acvice_igraph)
plot(advice_igraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure")
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
plot(advice_igraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
?ggraph
ggraph(advice_igraph, layout=hive, axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=index), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
..index..
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
library(ggraph)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout = "hive", axis = "dpt", sort.by = "tenure") +
geom_edge_hive(aes(alpha = ..index..), show.legend = FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
library(sna)
library(network)URL <- "http://snatool.g2.xrea.com/sampledata/"
library(network)
URL <- "http://snatool.g2.xrea.com/sampledata/"
flights <- read.csv(paste(URL, "top50.csv", sep=""), header=T, fileEncoding="cp932")
flights.net <- network(flights[, 1:2], directed = FALSE)
flights.net
pdf(file="airports.pdf", family="Japan1")
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
dev.off()
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
pdf(file="airports.pdf", family="Japan1")
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
#11.6
library(sna)
library(network)
URL <- "http://snatool.g2.xrea.com/sampledata/"
flights <- read.csv(paste(URL, "top50.csv", sep = ""),
header = TRUE, fileEncoding = "cp932")
flights.net <- network(flights[,1:2], directed = FALSE)
pdf(file = "airports.pdf", family = "Japan1")
gplot(flights.net, gmode = "graph", vertex.cex = 0,
edge.col = "grey50", displaylabels =TRUE,label.pos = 5)
dev.off()
getwd()
getwd()
library(dlm)
library(KFAS)
library(ggplot2)
library(ggfortify)
library(ggfortify)
getwd()
library(dlm)
install.packages("dlm")
install.packages("KFAS")
library(KFAS)
library(ggplot2)
library(ggfortify)
Nile
length(Nile)
KfLocalLevel <- function(y, mu_pre, P_pre, sigma_w, sigma_v){
#予測
mu_forecast <- mu_pre
P_forecast <- P_pre + sigma_w
y_forecast <- mu_forecast
F <- P_forecast + sigma_v
#フィルタリング
K <- P_forecast / (P_forecast + sigma_v)
y_resid <- y - y_forecast
mu_filter <- mu_forecast + K * y_resid
P_filter <- (1 - K) * P_forecast
result <- data.frame(
mu_filter = mu_filter,
P_filter = P_filter,
y_resid = y_resid,
F = F,
K = K
)
return(result)
}
N <- length(Nile)
mu_filter <- numeric(N)
mu_zero <- 0
mu_filter <- c(mu_zero, mu_filter)
P_filter <- numeric(N)
P_filter <- c(P_zero, P_filter)
P_zero <- 10000000
P_filter <- c(P_zero, P_filter)
y_resid <- numeric(N)
F <- numeric(N)
K <- numeric(N)
sigma_v <- 1000
sigma_v <- 1000
sigma_v <- 10000
#パラメタ
sigma_w <- 1000
library(dlm)
library(KFAS)
library(ggplot2)
library(ggfortify)
Nile
length(Nile)
KfLocalLevel <- function(y, mu_pre, P_pre, sigma_w, sigma_v){
#予測
mu_forecast <- mu_pre
P_forecast <- P_pre + sigma_w
y_forecast <- mu_forecast
F <- P_forecast + sigma_v
#フィルタリング
K <- P_forecast / (P_forecast + sigma_v)
y_resid <- y - y_forecast
mu_filter <- mu_forecast + K * y_resid
P_filter <- (1 - K) * P_forecast
result <- data.frame(
mu_filter = mu_filter,
P_filter = P_filter,
y_resid = y_resid,
F = F,
K = K
)
return(result)
}
N <- length(Nile)
#フィルタ化推定量
mu_filter <- numeric(N)
mu_zero <- 0
mu_filter <- c(mu_zero, mu_filter)
#フィルタ化推定量の誤差分散
P_filter <- numeric(N)
P_zero <- 10000000
P_filter <- c(P_zero, P_filter)
y_resid <- numeric(N)
F <- numeric(N)
K <- numeric(N)
#パラメタ
sigma_w <- 1000
sigma_v <- 10000
F
kekka <- KfLocalLevel(
y = Nile[i], mu_pre = mu_filter[i], P_pre = P_filter[i],
sigma_w=sigma_w, sigma_v=sigma_v
)
N
for(i in 1:N){
kekka <- KfLocalLevel(
y = Nile[i], mu_pre = mu_filter[i], P_pre = P_filter[i],
sigma_w=sigma_w, sigma_v=sigma_v
)
#フィルタ化推定量
mu_filter[i + 1] <- kekka$mu_filter
#フィルタ化推定量の誤差分散
P_filter[i + 1] <-  kekka$P_filter
#予測誤差
y_resid[i] <- kekka$y_resid
#予測誤差の分散
F[i] <- kekka$F
#カルマンゲイン
K[i] <- kekka$K
}
plot(Nile)
gplot(Nile)
autoplot(Nile)
autoplot(mu_filter)
mu_filter
plot(mu_filter)
autoplot(ts(mu_filter))
autoplot(ts(mu_filter[-1]))
autoplot(Nile)
Nile
autoplot(Nile, xlim(1850, 2000))
autoplot(Nile, xlim=(1850, 2000))
autoplot(ts(mu_filter[-1]))
ts(mu_filter[-1], start=1871)
autoplot(ts(mu_filter[-1], start=1871))
autoplot(ts(mu_filter[-1], start=1871))
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), , xlim=c(1850, 2000), ylim=c(400, 1400))
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), col="#ff000020")
?autoplot
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), colour="#ff000020")
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), colour="#ff000030")
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), colour="#ff000040")
autoplot(ts(mu_filter[-1], start=1871), xlim=c(1850, 2000), ylim=c(400, 1400),
colour="#0000ff40")
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), colour="#ff000040")
par(new=T)
autoplot(ts(mu_filter[-1], start=1871), xlim=c(1850, 2000), ylim=c(400, 1400),
colour="#0000ff40")
autoplot(Nile, xlim=c(1850, 2000), ylim=c(400, 1400), colour="#ff000040")
# ggplot ------------------------------------------------------------------
library(ggplot2)
df <- diamonds
#散布図
ggplot(df, aes(x=carat, y=price)) +
geom_point()
?aes
ggsave(filename="test.png", width=10, height=8, units="cm", dpi=100)
#散布図
ggplot(df, aes(x=carat, y=price)) +
geom_point() +
ggsave(filename="test.png", width=10, height=8, units="cm", dpi=100)
#散布図
g <- ggplot(df, aes(x=carat, y=price)) +
geom_point()
ggsave(filename="test.png", plot=g, width=10, height=8, units="cm", dpi=100)
ggsave(filename="test.jpg", plot=g, width=10, height=8, units="cm", dpi=100)
setwd("C:/Users/mas/learning/Network-Analysis-R")
n <- 1:50
n <- as.character(n)
sen.n <- paste("S", n, sep="")
wgt <- matrix(rchisq(50*50, 1), nrow=50, byrow=T)
diag(wgt) <- 0
wgt <- t(t(wgt) / colSums(wgt))
colSums(wgt)
wgt.list <- matrix(NA, nrow=2500, ncol=3)
for (j in 1:50) {
for (i in 1:50){
wgt.list[(j - 1) * 50 + i, 1] <- i
wgt.list[(j - 1) * 50 + i, 2] <- j
wgt.list[(j - 1) * 50 + i, 3] <- wgt[i, j]
}
}
#igraph
library(igraph)
g <- graph_from_edgelist(wgt.list[wgt.list[, 3] > 0.1, c(1, 2)])
V(g)$name <- sen.n
E(g)$weight <- wgt.list[wgt.list[, 3] > 0.1, 3]
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.2,
edge.label.cex=0.6, layout=layout_nicely(g))
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_nicely(g))
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_with_fr(g))
#igraph標準
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_with_fr(g, 2))
#igraph標準
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_with_fr(g, 2))
#igraph標準
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_with_fr(g, dim=2))
#igraph標準
plot(g, vertex.shape="circle", vertex.size=13, vertex.color="grey90",
vertex.label.cex=0.7, vertex.label.color="black",
edge.arrow.size=0.6, edge.label=round(E(g)$weight, 2), margin=-0.1,
edge.label.cex=0.6, layout=layout_with_fr(g, dim=2))
#3D
rglplot(g, layout=layout_with_fr(g, dim=3))
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90"
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90", new=T
)
?rglplot
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90", vertex.label=V(g)$name, new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90", vertex.label=V(g)$name,
vertex.label.cex=0.8
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90", vertex.label=V(g)$name,
vertex.label.cex=0.8,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90", vertex.label=V(g)$name,
vertex.label.cex=0.8,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=1
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=1,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=10,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=3,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=3, edge.label=round(E(g)$weight, 1)
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=3, edge.label=round(E(g)$weight, 1),
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=3, edge.label=round(E(g)$weight, 1),
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
vertex.label.cex=0.5
edge.arrow.size=3,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
vertex.label.cex=0.5,
edge.arrow.size=3,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
vertex.label=V(g)$name,
edge.arrow.size=3,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
vertex.label=sen.n,
edge.arrow.size=3,
new=T
)
#3D
rglplot(g, layout=layout_with_fr(g, dim=3),
vertex.color="grey90",
edge.arrow.size=3,
new=T
)
