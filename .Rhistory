library(tseries)
library(ggplot2)
library(ggfortify)
library(gridExtra)
install.packages("fGarch")
install.packages("fGarch")
install.packages("fGarch")
library(fGarch); library(rugarch)
n_sample <- 1000
# GARCH Model
spec1 <- garchSpec(model = list(omega=0.001, alpha=0.4, beta=0.5, mu=0.1),
cond.dist="norm")
sim_garch <- garchSim(spec1,
n=n_sample,
extended=T)
install.packages("fGarch")
install.packages("fGarch")
library(fGarch); library(rugarch)
install.packages("fGarch")
install.packages("fGarch")
library(fGarch); library(rugarch)
# GARCH Model
spec1 <- garchSpec(model = list(omega=0.001, alpha=0.4, beta=0.5, mu=0.1),
cond.dist="norm")
set.seed(1)
sim_garch <- garchSim(spec1,
n=n_sample,
extended=T)
class(sim_garch)
sim_garch <- ts(sim_garch)
class(sim_garch)
# ARMA+GARCH Model
spec2 <- garchSpec(model = list(omega=0.001, alpha=0.4, beta=0.5, mu=0.1, ar=-0.6, ma=-0.5),
cond.dist="norm")
set.seed(0)
sim_arma_garch <- garchSim(spec2,
n=n_sample,
extended=T)
sim_arma_garch <- garchSim(spec2,
n=n_sample,
extended=F)
# ARMA
mod_arma <- Arima(sim_arma_garch, order=c(1,0,1))
library(forecast)
# ARMA
mod_arma <- Arima(sim_arma_garch, order=c(1,0,1))
checkresiduals(mod_arma)
n_sample
# ARMA+GARCH Model データ生成
spec2 <- garchSpec(model = list(omega=0.001, alpha=0.4, beta=0.5, mu=0.1, ar=-0.6, ma=-0.5),
cond.dist="norm")
set.seed(0)
sim_arma_garch <- garchSim(spec2,
n=n_sample,
extended=F)
# ARMA
mod_arma <- Arima(sim_arma_garch, order=c(1,0,1))
checkresiduals(mod_arma)
checkresiduals(mod_arma)
library(xts)
library(forecast)
library(tseries)
library(ggplot2)
library(ggfortify)
library(gridExtra)
library(fGarch); library(rugarch)
checkresiduals(mod_arma)
dwtest(mod_arma)
library(lmtest)
dwtest(mod_arma)
sim_arma_garch
dwtest(mod_arma)
mod_arma
attributes(mod_arma)
?dwtest
dwtest(mod_arma$resuduals)
jarque.bera.test(mod_arma$resuduals)
mod_arma$resuduals
mod_arma
mod_arma$reisuduals
mod_arma$residuals
mod_arma$residuals
jarque.bera.test(mod_arma$residuals)
dwtest(mod_arma$residuals)
spec_rugarch2 <- ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1), include.mean=T),
distribution.model="norm")
mod_arma_garch <- ugarchfit(
spec=spec_rugarch2, data=sim_arma_garch, solver="hybrid")
coef(mod_arma_garch)
resid_arma_garch <- residuals(mod_arma_garch) / sigma(mod_arma_garch)
resid_arma <- mod_arma$residuals / sqrt(mod_arma$sigma2)
mod_arma_garch
d <- data.frame(arma_garch=resid_arma_garch,
arma=resid_arma)
autoplot(ts(d), facets=T, ylab="", main="normalized residuals")
#GJR
data(spyreal)
head(spyreal)
library(xts)
library(forecast)
library(tseries)
library(ggplot2)
library(ggfortify)
library(gridExtra)
library(fGarch); library(rugarch)
spec_rugach3 <- ugarchsped(variance.model=list(model="gjrGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1), include.mean=T),
distribution.model="std")
library(fGarch); library(rugarch)
spec_rugach3 <- ugarchspec(variance.model=list(model="gjrGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1), include.mean=T),
distribution.model="std")
spec_rugarch3 <- ugarchspec(variance.model=list(model="gjrGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1), include.mean=T),
distribution.model="std")
data=spreal[, 1]
spyreal[, 1]
mod_gjr <- ugarchfit(
spec=spec_rugarch3, data=spyreal[, 1], solver="hybrid")
class(spyreal)
autoplot(spyreal, facets=T)
coef(mod_gjr)
spec_rugarch3 <- ugarchspec(variance.model=list(model="gjrGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1)),
distribution.model="std")
mod_gjr <- ugarchfit(
spec=spec_rugarch3, data=spyreal[, 1], solver="hybrid")
coef(mod_gjr)
spec_rugarch4 <- ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1, 1)),
mean.model=list(armaOrder=c(1, 1)),
distribution.model="std")
mod_standard_garch <- ugarchfit(
spec=spec_rugarch4, data=spyreal[, 1], solver="hybrid")
infocriteria(mod_gjr)["Akaike",]
infocriteria(mod_standard_garch)["Akaike",]
d_xts <- spyreal[, 1]
d_xts
d_xts$volatility <- sigma(mod_gjr)
d_xts$volatility <- sigma(mod_gjr)
autoplot(d_xts, facets=T, ylab="")
?Arima
# アークダイアグラム
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("gastonstat/arcdiagram")
library("devtools", lib.loc="C:/Users/mas/Anaconda3/envs/nw_env/Lib/R/library")
install_github('arcdiagram', username='gastonstat')
install_github("gastonstat/arcdiagram")
.libPaths()
install.packages("rlang")
install.packages("rlang")
# アークダイアグラム
install.packages("devtools")
library(devtools)
install_github("gastonstat/arcdiagram")
library(arcdiagram)
library("rlang", lib.loc="C:/Users/mas/Anaconda3/envs/nw_env/Lib/R/library")
detach("package:rlang", unload=TRUE)
library("rlang", lib.loc="C:/Users/mas/Anaconda3/envs/nw_env/Lib/R/library")
airports <- read.csv(paste(URL, "airport.csv", sep=""), header=T, fileEncoding="cp932")
URL <- "http://snatool.g2.xrea.com/sampledata/"
airports <- read.csv(paste(URL, "airport.csv", sep=""), header=T, fileEncoding="cp932")
flights <- read.csv(paste(URL, "top50.csv", sep=""), header=T, fileEncoding="cp932")
edgelist <- as.matrix(flights[, 1:2])
t(edgelist)
as.vector(t(edgelist))
edgelist
t(edgelist)
as.vector(t(edgelist))
as.vector(t(edgelist))
col <- c("darkgoldenrod1", "cyan2")
windows(width=12)
head(flithts)
head(flights)
arcplot(edgelist, lwd.arcs=flights[,3]/10^6, labels=names,
ordering=as.vector(airports$airport), col.label="grey30",
col.arcs=hsv(0, 0, 0.2, 0.25), cex.nodes=2,
col.nodes=col[as.integer(airports[names,"type"])],
pch.nodes=18 - col[as.integer(airports[names,"type"])]))
arcplot(edgelist, lwd.arcs=flights[,3]/10^6, labels=names,
ordering=as.vector(airports$airport), col.label="grey30",
col.arcs=hsv(0, 0, 0.2, 0.25), cex.nodes=2,
col.nodes=col[as.integer(airports[names,"type"])],
pch.nodes=18 - as.integer(airports[names,"type"]))
edgelist
flights[,3]
airports$airport
col[as.integer(airports[names,"type"])]
airports[names,"type"])
airports[names,"type"]
airports
names
unique(as.vector(t(edgelist)))
names <- unique(as.vector(t(edgelist)))
names
arcplot(edgelist, lwd.arcs=flights[,3]/10^6, labels=names,
ordering=as.vector(airports$airport), col.label="grey30",
col.arcs=hsv(0, 0, 0.2, 0.25), cex.nodes=2,
col.nodes=col[as.integer(airports[names,"type"])],
pch.nodes=18 - as.integer(airports[names,"type"]))
windows(width=12)
arcplot(edgelist, lwd.arcs=flights[,3]/10^6, labels=names,
ordering=as.vector(airports$airport), col.label="grey30",
col.arcs=hsv(0, 0, 0.2, 0.25), cex.nodes=2,
col.nodes=col[as.integer(airports[names,"type"])],
pch.nodes=18 - as.integer(airports[names,"type"]))
18 - as.integer(airports[names,"type"]
18 - as.integer(airports[names,"type"])
18 - as.integer(airports[names,"type"])
airports[names,"type"]
airports[names,"type"]
airports
names
col
class(airports)
airports$airport == names
names
airports$airport
airports
airports$airport in names
as.vector(airports$airport)
airports[names,"type"]
names
airports[,"type"])
airports[,"type"]
as.integer(airports[,"type"])
arcplot(edgelist, lwd.arcs=flights[,3]/10^6, labels=names,
ordering=as.vector(airports$airport), col.label="grey30",
col.arcs=hsv(0, 0, 0.2, 0.25), cex.nodes=2,
col.nodes=col[as.integer(airports[,"type"])],
pch.nodes=18 - as.integer(airports[,"type"]))
#ハイブプロット
#ノードの座標に意味がある
ADVICE <- matrix(c(
0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,
0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,1,
1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,1,1,1,0,1,1,
1,1,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,
0,1,0,1,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,
1,1,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,0,1,
1,1,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,0,
1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,
0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,
1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,
1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,
1,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,0,1,0,
1,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,1,1,0,0,1,
0,1,1,1,0,1,1,1,0,0,0,1,0,1,0,0,1,1,0,1,0),
nrow = 21, byrow = TRUE)
tenure <- c(9.333,19.583,12.75,7.5,3.333,
28,30,11.333,5.417,9.25,27,8.917,0.25,10.417,
8.417,4.667,12.417,9.083,4.833,11.667,12.5)
dpt <- c(4,4,2,4,2,1,0,1,2,3,3,1,2,2,2,4,1,3,2,2,1)
level <- c(3,2,3,3,3,3,1,3,3,3,3,3,3,2,3,3,3,2,3,3,2)
shapes(ADVICE)
dim(ADVICE)
length(tenure)
length(dpt)
length(level)
install.packages("HiveR")
library(HiveR)
library(RColorBrewer)
rownames(ADVICE)
rownames(ADVICE) <- 1:nrow(ADVICE)
colnames(ADVICE) <- 1:ncol(ADVICE)
advHPD <- adj2HPD(ADVICE + t(ADVICE))
ADVICE + t(ADVICE)
dpt + 1
advHPD$nodes$axis <- as.integer(dpt + 1)
tenure
advHPD$raduys <- tenure
advHPD$radus <- tenure
advHPD$radius <- tenure
colSums(ADVICE)
advHPD$colSums(ADVICE)/10
advHPD <- adj2HPD(ADVICE + t(ADVICE))
advHPD$nodes$axis <- as.integer(dpt + 1)
advHPD$nodes$radius <- tenure
advHPD$nodes$colSums(ADVICE)/10
advHPD$nodes$size <- colSums(ADVICE)/10
advHPD$nodes$color <- brewer.pal(3, "Greys")[level]
brewer.pal(3, "Greys")[level]
head(advHPD)
head(advHPD$nodes)
advHPD$edges$color <- brewer.pal(3, "Set2")[advHPD$edges$weight]
head(advHPD$edges)
RColorBrewer::brewer.pal(5, "Set1")
plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=5)
plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=1,
rot=c(90, -18, 54, -54, 18))
plotHive(advHPD, ch=0, method="rank", bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=1,
rot=c(90, -18, 54, -54, 18))
plotHive(advHPD, ch=0, bkgnd="grey10",
axLabs=paste("Dpt.", 0:4), axLab.pos=5)
library(igraph)
advice_igraph <- graph_from_adjacency_matrix(ADVICE)
V(advice_igraph)$tenure <- tenure
V(advice_igraph)$dpt <- paste("Dpt.", dpt)
library(ggraph)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
library(ggraph)
ligrary(purrr)
install.packages("purrr")
ligrary(purrr)
library(purrr)
library(ggraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph <- graph_from_adjacency_matrix(ADVICE)
V(advice_igraph)$tenure <- tenure
V(advice_igraph)$dpt <- paste("Dpt.", dpt)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
plot(acvice_igraph)
plot(advice_igraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure")
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
plot(advice_igraph)
ggraph(advice_igraph, layout='hive', axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
?ggraph
ggraph(advice_igraph, layout=hive, axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=index), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
..index..
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=F) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed()
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
advice_igraph
library(ggraph)
ggraph(advice_igraph, layout="hive", axis="dpt", sort.by="tenure") +
geom_edge_hive(aes(alpha=..index..), show.legend=FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
ggraph(advice_igraph, layout = "hive", axis = "dpt", sort.by = "tenure") +
geom_edge_hive(aes(alpha = ..index..), show.legend = FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
library(sna)
library(network)URL <- "http://snatool.g2.xrea.com/sampledata/"
library(network)
URL <- "http://snatool.g2.xrea.com/sampledata/"
flights <- read.csv(paste(URL, "top50.csv", sep=""), header=T, fileEncoding="cp932")
flights.net <- network(flights[, 1:2], directed = FALSE)
flights.net
pdf(file="airports.pdf", family="Japan1")
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
dev.off()
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
pdf(file="airports.pdf", family="Japan1")
gplot(flights.net, gmode="graph", vertex.cex=0,
edge.col="grey50", displaylabels=T, label.pos=5)
setwd("C:/Users/mas/learning/Network-Analysis-R")
#11.5.3
ADVICE <- matrix(c(
0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,
0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,1,
1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,1,1,1,0,1,1,
1,1,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,
0,1,0,1,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,
1,1,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,0,1,
1,1,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,0,
1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,
0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,
1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,
1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,
1,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,0,1,0,
1,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,1,1,0,0,1,
0,1,1,1,0,1,1,1,0,0,0,1,0,1,0,0,1,1,0,1,0),
nrow = 21, byrow = TRUE)
tenure <- c(9.333,19.583,12.75,7.5,3.333,
28,30,11.333,5.417,9.25,27,8.917,0.25,10.417,
8.417,4.667,12.417,9.083,4.833,11.667,12.5)
dpt <- c(4,4,2,4,2,1,0,1,2,3,3,1,2,2,2,4,1,3,2,2,1)
level <- c(3,2,3,3,3,3,1,3,3,3,3,3,3,2,3,3,3,2,3,3,2)
library(igraph)
advice_igraph <- graph_from_adjacency_matrix(ADVICE)
V(advice_igraph)$tenure <- tenure
V(advice_igraph)$dpt <- paste("Dpt.", dpt)
library(ggraph)
ggraph(advice_igraph, layout = "hive", axis = "dpt", sort.by = "tenure") +
geom_edge_hive(aes(alpha = ..index..), show.legend = FALSE) +
geom_node_point() +
geom_axis_hive() +
coord_fixed() +
theme_graph()
